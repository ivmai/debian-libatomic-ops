diff --git a/src/atomic_ops/sysdeps/gcc/sh.h b/src/atomic_ops/sysdeps/gcc/sh.h
new file mode 100644
index 0000000..ad97008
--- /dev/null
+++ b/src/atomic_ops/sysdeps/gcc/sh.h
@@ -0,0 +1,35 @@
+/*
+ * Copyright (c) 2009 by Takashi YOSHII. All rights reserved.
+ *
+ *
+ * THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY EXPRESSED
+ * OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.
+ *
+ * Permission is hereby granted to use or copy this program
+ * for any purpose,  provided the above notices are retained on all copies.
+ * Permission to modify the code and to distribute modified code is granted,
+ * provided the above notices are retained, and a notice that the code was
+ * modified is included with the above copyright notice.
+ */
+
+#include "../all_atomic_load_store.h"
+#include "../ordered.h"
+/* sh has tas.b(byte) only */
+#include "../test_and_set_t_is_char.h"
+
+#undef AO_TS_SET
+#define AO_TS_SET (1<<7)
+
+AO_INLINE AO_TS_VAL_t
+AO_test_and_set_full(volatile AO_TS_t *addr)
+{
+  int oldval;
+
+  __asm__ __volatile__(
+       "tas.b @%1; movt %0"
+       : "=r" (oldval)
+       : "r" (addr)
+       : "t", "memory");
+   return oldval?AO_TS_CLEAR:AO_TS_SET;
+}
+#define AO_HAVE_test_and_set_full
--- a/src/atomic_ops/sysdeps/Makefile.am.orig	2009-09-17 15:47:50.000000000 +0900
+++ b/src/atomic_ops/sysdeps/Makefile.am	2009-09-17 15:48:19.000000000 +0900
@@ -28,7 +28,7 @@
 	  gcc/hppa.h gcc/ia64.h \
 	  gcc/powerpc.h gcc/sparc.h \
 	  gcc/hppa.h gcc/m68k.h gcc/mips.h gcc/s390.h \
-	  gcc/ia64.h gcc/x86_64.h gcc/cris.h \
+	  gcc/ia64.h gcc/x86_64.h gcc/cris.h gcc/sh.h \
 	\
 	  icc/ia64.h \
 	\
--- a/src/atomic_ops.h.orig	2009-09-17 15:46:10.000000000 +0900
+++ b/src/atomic_ops.h	2009-09-17 15:47:33.000000000 +0900
@@ -232,6 +232,10 @@
 # if defined(__mips__)
 #   include "atomic_ops/sysdeps/gcc/mips.h"
 # endif /* __mips__ */
+# if defined(__sh__) || defined(SH4)
+#   include "atomic_ops/sysdeps/gcc/sh.h"
+#   define AO_CAN_EMUL_CAS
+# endif /* __sh__ */
 #endif /* __GNUC__ && !AO_USE_PTHREAD_DEFS */
 
 #if defined(__INTEL_COMPILER) && !defined(AO_USE_PTHREAD_DEFS)
